Flutter manages navigation using a stack-based approach where routes (screens) are pushed onto or popped off the stack.

1. Navigator.push()
   Used to navigate to a new screen (route).
   Pushes a new route onto the stack.
2. Navigator.pop()
   Used to return to the previous screen.
   Pops the top route from the stack.

🔹 Analogy: Think of it like a stack of plates—adding a plate (push) places it on top, and removing one (pop) takes the top plate off.


Types of Navigation in Flutter:
Flutter supports two main navigation paradigms:
1️. Imperative Navigation (Navigator 1.0)
2️. Declarative Navigation (Navigator 2.0)

Imperative Navigation (Navigator 1.0):
✔ Navigation is handled programmatically by pushing and popping routes.
✔ Uses Navigator.push(), Navigator.pop(), Navigator.pushNamed().
✔ Best for small to medium-sized apps with simple navigation.

  Ways to Define Routes in Navigator 1.0:
a) Anonymous Routes (Direct Navigation)
   Uses MaterialPageRoute to define screens without a name.
b) Named Routes
   Routes are pre-defined in the MaterialApp routes parameter.

  Passing Data Between Screens:
There are two main ways to pass data:
a) Via Constructor (for Anonymous Routes):
✔ Pass data directly when pushing a new screen.
✔ Best for small apps where navigation is simple.
✔ Not applicable for Named Routes.

b) Using arguments (for Named Routes):
✔ Used with Navigator.pushNamed() to pass data.
✔ Data is accessed using ModalRoute.of(context)?.settings.arguments.


Use Navigator 1.0 if:
✔ Small app with a few screens.
✔ You only need simple push/pop navigation.


What is onGenerateRoute?
It is a centralized route management approach in Navigator 1.0.
It allows dynamic route generation instead of defining routes upfront in routes: {}.
It is used when you need conditional navigation or custom route handling.

 When to Use onGenerateRoute?
🔹 When using Navigator 1.0 and you need dynamic route handling.
🔹 When you don't want to define all routes upfront in routes: {}.
🔹 When handling unknown routes (onUnknownRoute).
You are using named routes but need to pass arguments.